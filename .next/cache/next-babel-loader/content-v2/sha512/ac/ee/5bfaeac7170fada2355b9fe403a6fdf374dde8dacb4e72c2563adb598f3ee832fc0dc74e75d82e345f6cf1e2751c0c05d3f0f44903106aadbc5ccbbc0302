{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/deeply/Proyectos/react-turpial_curso/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.debug(props.meetupData);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    description: props.description,\n    address: props.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/deeply/Proyectos/react-turpial_curso/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","debug","meetupData","image","title","description","address"],"mappings":";;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAChCC,EAAAA,OAAO,CAACC,KAAR,CAAcF,KAAK,CAACG,UAApB;AACA,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEH,KAAK,CAACI,KADd;AAEC,IAAA,KAAK,EAAEJ,KAAK,CAACK,KAFd;AAGC,IAAA,WAAW,EAAEL,KAAK,CAACM,WAHpB;AAIC,IAAA,OAAO,EAAEN,KAAK,CAACO;AAJhB;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CAVD;;KAAMR,a;;AAiEN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n\tconsole.debug(props.meetupData);\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage={props.image}\n\t\t\ttitle={props.title}\n\t\t\tdescription={props.description}\n\t\t\taddress={props.address}\n\t\t/>\n\t);\n};\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: false, // paths key have all posibles paths\n\t\t// fallback: false, // try to generate page for new paths\n\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t\t// paths: [\n\t\t// \t{\n\t\t// \t\tparams: {\n\t\t// \t\t\tmeetupId: \"m1\",\n\t\t// \t\t},\n\t\t// \t},\n\t\t// \t{\n\t\t// \t\tparams: {\n\t\t// \t\t\tmeetupId: \"m2\",\n\t\t// \t\t},\n\t\t// \t},\n\t\t// ],\n\t};\n}\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetiup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\t// {_id: ObjectId('58f8085dc1840e050034d98f')}\n\t// {\"_id\":{\"$oid\":\"58f8085dc1840e050034d98f\"}}\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t});\n\tconsole.debug(selectedMeetup);\n\n\tclient.close();\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: JSON.parse(JSON.stringify(selectedMeetup)),\n\t\t},\n\t};\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}