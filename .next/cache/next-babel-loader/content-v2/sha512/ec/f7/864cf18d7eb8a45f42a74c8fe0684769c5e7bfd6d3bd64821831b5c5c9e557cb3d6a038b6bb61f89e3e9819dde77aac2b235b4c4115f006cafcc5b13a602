{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/deeply/Proyectos/react-turpial_curso/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  console.debug(props.meetupData.title);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    description: props.description,\n    address: props.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    // paths key have all posibles paths\n    // fallback: false, // try to generate page for new paths\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // paths: [\n    // \t{\n    // \t\tparams: {\n    // \t\t\tmeetupId: \"m1\",\n    // \t\t},\n    // \t},\n    // \t{\n    // \t\tparams: {\n    // \t\t\tmeetupId: \"m2\",\n    // \t\t},\n    // \t},\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for a single meetiup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\"); // {_id: ObjectId('58f8085dc1840e050034d98f')}\n  // {\"_id\":{\"$oid\":\"58f8085dc1840e050034d98f\"}}\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.debug(selectedMeetup);\n  client.close();\n  return {\n    props: {\n      meetupData: JSON.stringify(selectedMeetup)\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/deeply/Proyectos/react-turpial_curso/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","console","debug","meetupData","title","image","description","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","JSON","stringify"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAChCC,EAAAA,OAAO,CAACC,KAAR,CAAcF,KAAK,CAACG,UAAN,CAAiBC,KAA/B;AACA,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEJ,KAAK,CAACK,KADd;AAEC,IAAA,KAAK,EAAEL,KAAK,CAACI,KAFd;AAGC,IAAA,WAAW,EAAEJ,KAAK,CAACM,WAHpB;AAIC,IAAA,OAAO,EAAEN,KAAK,CAACO;AAJhB;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,mCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACNC,IAAAA,QAAQ,EAAE,KADJ;AACW;AACjB;AAEAC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC/BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADuB,KAAb,CAAZ,CAJD,CAON;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBM,GAAP;AAoBA;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC7C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,mCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CAP6C,CAS7C;AACA;;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AACtDb,IAAAA,GAAG,EAAEnB,QAAQ,CAAC2B,QAAD;AADyC,GAA1B,CAA7B;AAGAvB,EAAAA,OAAO,CAACC,KAAR,CAAc0B,cAAd;AAEAnB,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACNlB,IAAAA,KAAK,EAAE;AACNG,MAAAA,UAAU,EAAE2B,IAAI,CAACC,SAAL,CAAeH,cAAf;AADN;AADD,GAAP;AAKA;AACD,eAAe7B,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n\tconsole.debug(props.meetupData.title);\n\treturn (\n\t\t<MeetupDetail\n\t\t\timage={props.image}\n\t\t\ttitle={props.title}\n\t\t\tdescription={props.description}\n\t\t\taddress={props.address}\n\t\t/>\n\t);\n};\n\nexport async function getStaticPaths() {\n\tconst client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tfallback: false, // paths key have all posibles paths\n\t\t// fallback: false, // try to generate page for new paths\n\n\t\tpaths: meetups.map((meetup) => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t\t// paths: [\n\t\t// \t{\n\t\t// \t\tparams: {\n\t\t// \t\t\tmeetupId: \"m1\",\n\t\t// \t\t},\n\t\t// \t},\n\t\t// \t{\n\t\t// \t\tparams: {\n\t\t// \t\t\tmeetupId: \"m2\",\n\t\t// \t\t},\n\t\t// \t},\n\t\t// ],\n\t};\n}\nexport async function getStaticProps(context) {\n\t// fetch data for a single meetiup\n\n\tconst meetupId = context.params.meetupId;\n\n\tconst client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\t// {_id: ObjectId('58f8085dc1840e050034d98f')}\n\t// {\"_id\":{\"$oid\":\"58f8085dc1840e050034d98f\"}}\n\tconst selectedMeetup = await meetupsCollection.findOne({\n\t\t_id: ObjectId(meetupId),\n\t});\n\tconsole.debug(selectedMeetup);\n\n\tclient.close();\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: JSON.stringify(selectedMeetup),\n\t\t},\n\t};\n}\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}