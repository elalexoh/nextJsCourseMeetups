{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/deeply/Proyectos/react-turpial_curso/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\n// import { useEffect } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"http://placehold.it/500\",\n  address: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo officiis rem aperiam id expedita cum dolore eveniet optio alias ab, assumenda dolores ullam quod autem? Voluptatum dignissimos assumenda et eos?\"\n}, {\n  id: \"m2\",\n  title: \"A Second Meetup\",\n  image: \"http://placehold.it/500\",\n  address: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo officiis rem aperiam id expedita cum dolore eveniet optio alias ab, assumenda dolores ullam quod autem? Voluptatum dignissimos assumenda et eos?\"\n}];\n\nconst HomePage = props => {\n  // const [loadedMeetup, setLoadedMeetup] = useState([]);\n  // useEffect(() => {\n  // \t// send http request and fetch data\n  // \tsetLoaded(DUMMY_MEETUPS);\n  // }, []);\n  console.debug(props.meetups);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}; // //?? Server side render\n// export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \t// Fetch data from API\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS, //emulate props\n// \t\t},\n// \t};\n// }\n// ?? Static generation (AFTER BUILD)\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); // Fetch data from API\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        id: meetup._id.toString(),\n        title: meetup.data.title,\n        address: meetup.data.address,\n        image: meetup.data.image\n      })) //emulate props\n\n    },\n    revalidate: 1 //updated every 1sec\n\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/home/deeply/Proyectos/react-turpial_curso/NextJs/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","HomePage","props","console","debug","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","_id","toString","data","revalidate"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,gBAFR;AAGCC,EAAAA,KAAK,EAAE,yBAHR;AAICC,EAAAA,OAAO,EACN;AALF,CADqB,EAQrB;AACCH,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,iBAFR;AAGCC,EAAAA,KAAK,EAAE,yBAHR;AAICC,EAAAA,OAAO,EACN;AALF,CARqB,CAAtB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC3B;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,KAAR,CAAcF,KAAK,CAACG,OAApB;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEH,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAVD,C,CAYA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACtC,QAAMC,MAAM,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoB,mCAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP,GAPsC,CAStC;;AACA,SAAO;AACNZ,IAAAA,KAAK,EAAE;AACNG,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AACjCnB,QAAAA,EAAE,EAAEmB,MAAM,CAACC,GAAP,CAAWC,QAAX,EAD6B;AAEjCpB,QAAAA,KAAK,EAAEkB,MAAM,CAACG,IAAP,CAAYrB,KAFc;AAGjCE,QAAAA,OAAO,EAAEgB,MAAM,CAACG,IAAP,CAAYnB,OAHY;AAIjCD,QAAAA,KAAK,EAAEiB,MAAM,CAACG,IAAP,CAAYpB;AAJc,OAAb,CAAZ,CADH,CAMD;;AANC,KADD;AASNqB,IAAAA,UAAU,EAAE,CATN,CASS;;AATT,GAAP;AAWA;AACD,eAAenB,QAAf","sourcesContent":["// import { useEffect } from \"react\";\nimport { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst DUMMY_MEETUPS = [\n\t{\n\t\tid: \"m1\",\n\t\ttitle: \"A First Meetup\",\n\t\timage: \"http://placehold.it/500\",\n\t\taddress:\n\t\t\t\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo officiis rem aperiam id expedita cum dolore eveniet optio alias ab, assumenda dolores ullam quod autem? Voluptatum dignissimos assumenda et eos?\",\n\t},\n\t{\n\t\tid: \"m2\",\n\t\ttitle: \"A Second Meetup\",\n\t\timage: \"http://placehold.it/500\",\n\t\taddress:\n\t\t\t\"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quo officiis rem aperiam id expedita cum dolore eveniet optio alias ab, assumenda dolores ullam quod autem? Voluptatum dignissimos assumenda et eos?\",\n\t},\n];\n\nconst HomePage = (props) => {\n\t// const [loadedMeetup, setLoadedMeetup] = useState([]);\n\t// useEffect(() => {\n\t// \t// send http request and fetch data\n\t// \tsetLoaded(DUMMY_MEETUPS);\n\t// }, []);\n\n\tconsole.debug(props.meetups);\n\n\treturn <MeetupList meetups={props.meetups} />;\n};\n\n// //?? Server side render\n// export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n\n// \t// Fetch data from API\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS, //emulate props\n// \t\t},\n// \t};\n// }\n\n// ?? Static generation (AFTER BUILD)\nexport async function getStaticProps() {\n\tconst client = await MongoClient.connect(\"mongodb://localhost:27017/meetups\");\n\tconst db = client.db();\n\tconst meetupsCollection = db.collection(\"meetups\");\n\n\tconst meetups = await meetupsCollection.find().toArray();\n\n\tclient.close();\n\n\t// Fetch data from API\n\treturn {\n\t\tprops: {\n\t\t\tmeetups: meetups.map((meetup) => ({\n\t\t\t\tid: meetup._id.toString(),\n\t\t\t\ttitle: meetup.data.title,\n\t\t\t\taddress: meetup.data.address,\n\t\t\t\timage: meetup.data.image,\n\t\t\t})), //emulate props\n\t\t},\n\t\trevalidate: 1, //updated every 1sec\n\t};\n}\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}